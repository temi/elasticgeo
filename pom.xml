<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>mil.nga.giat</groupId>
  <artifactId>elasticgeo</artifactId>
  <version>2.7.4</version>
  <packaging>pom</packaging>
  <name>elasticgeo</name>
  <description>ElasticGeo provides a GeoTools data store that allows geospatial features from an Elasticsearch index to be published via OGC services using GeoServer.</description>
  <url>https://github.com/ngageoint/elasticgeo</url>
  <licenses>
    <license>
      <name>GNU Lesser General Public License, Version 2.1</name>
      <url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
    </license>
  </licenses>
  <scm>
    <url>https://github.com/ngageoint/elasticgeo.git</url>
    <connection>scm:git:git@github.com:ngageoint/elasticgeo.git</connection>
    <tag>2.7.4</tag>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <geotools.version>13.4</geotools.version>
    <geoserver.version>2.7.4</geoserver.version>
    <elasticsearch.version>1.7.3</elasticsearch.version>
    <jacoco.version>0.7.4.201502262128</jacoco.version>
  </properties>
  <modules>
    <module>gt-elasticsearch</module>
    <module>gs-web-elasticsearch</module>
  </modules>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings
			only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jacoco</groupId>
                     <artifactId>jacoco-maven-plugin</artifactId>
                     <versionRange>[${jacoco.version},)</versionRange>
                     <goals>
                         <goal>prepare-agent</goal>
                     </goals>
                  </pluginExecutionFilter>
                    <action>
                        <ignore />
                    </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
	    <version>2.5.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
          <configuration>
              <!-- Sets the VM argument line used when unit tests are run. -->
              <argLine>${surefireArgLine}</argLine>
              <!-- Skips unit tests if the value of skip.unit.tests property is true -->
              <skipTests>${skip.unit.tests}</skipTests>
              <!-- Excludes integration tests when unit tests are run. -->
              <excludes>
                  <exclude>**/IT*.java</exclude>
              </excludes>
          </configuration>
      </plugin>
        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
                <execution>
                    <id>pre-unit-test</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                    <configuration>
                        <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                        <propertyName>surefireArgLine</propertyName>
                    </configuration>
                </execution>
                <execution>
                    <id>post-unit-test</id>
                    <phase>test</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                    <configuration>
                        <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                        <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>3.1.0</version>
            <configuration>
                <jacocoReports>
                    <jacocoReport>${project.basedir}/gt-elasticsearch/target/site/jacoco-ut/jacoco.xml</jacocoReport>
                </jacocoReports>
            </configuration>
        </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net repository</name>
      <url>http://download.java.net/maven/2</url>
    </repository>
    <repository>
      <id>osgeo</id>
      <name>Open Source Geospatial Foundation Repository</name>
      <url>http://download.osgeo.org/webdav/geotools/</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>boundless</id>
      <name>Boundless Maven Repository</name>
      <url>http://repo.boundlessgeo.com/main</url>
    </repository>
  </repositories>
</project>
